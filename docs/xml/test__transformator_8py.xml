<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__transformator_8py" kind="file" language="Python">
    <compoundname>test_transformator.py</compoundname>
    <innerclass refid="class_n_e_a_t___py_genetics_1_1_n_e_a_t_1_1_tests_1_1_repository_tests_1_1test__transformator_1_1_test_transformator" prot="public">NEAT_PyGenetics::NEAT::Tests::RepositoryTests::test_transformator::TestTransformator</innerclass>
    <innernamespace refid="namespace_n_e_a_t___py_genetics_1_1_n_e_a_t_1_1_tests_1_1_repository_tests_1_1test__transformator">NEAT_PyGenetics::NEAT::Tests::RepositoryTests::test_transformator</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>unittest</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>unittest<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TestCase</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>NEAT.Analyst.AnalysisResult<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>AnalysisResult</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>NEAT.Analyst.Cluster<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Cluster</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>NEAT.GenomeStructures.StorageStructure.StorageGenome<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>StorageGenome</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>NEAT.Repository.Transformator<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Transformator</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="class_n_e_a_t___py_genetics_1_1_n_e_a_t_1_1_tests_1_1_repository_tests_1_1test__transformator_1_1_test_transformator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_n_e_a_t___py_genetics_1_1_n_e_a_t_1_1_tests_1_1_repository_tests_1_1test__transformator_1_1_test_transformator" kindref="compound">TestTransformator</ref>(TestCase):</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_encode_AnalysisResult(self):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysis_result<sp/>=<sp/>AnalysisResult()</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>=<sp/>copy.deepcopy(analysis_result.__dict__)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary.__setitem__(</highlight><highlight class="stringliteral">&apos;_type&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;AnalysisResult&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual(dictionary,<sp/>Transformator.encode_AnalysisResult(analysis_result))</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_encode_StorageGenome(self):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_genome<sp/>=<sp/>StorageGenome()</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_dict<sp/>=<sp/>copy.deepcopy(storage_genome.__dict__)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysis_dict<sp/>=<sp/>Transformator.encode_AnalysisResult(storage_dict.__getitem__(</highlight><highlight class="stringliteral">&apos;analysis_result&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_dict.__setitem__(</highlight><highlight class="stringliteral">&apos;analysis_result&apos;</highlight><highlight class="normal">,<sp/>analysis_dict)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_dict.__setitem__(</highlight><highlight class="stringliteral">&apos;_type&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;StorageGenome&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertDictEqual(storage_dict,<sp/>Transformator.encode_StorageGenome(storage_genome))</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_decode_AnalysisResult(self):</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysis_result<sp/>=<sp/>AnalysisResult()</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary<sp/>=<sp/>analysis_result.__dict__</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dictionary.__setitem__(</highlight><highlight class="stringliteral">&apos;_type&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;AnalysisResult&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(analysis_result.__eq__(Transformator.decode_AnalysisResult(dictionary)))</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_decode_StorageGenome(self):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage_genome<sp/>=<sp/>StorageGenome()</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysis_storage<sp/>=<sp/>storage_genome.__dict__.__getitem__(</highlight><highlight class="stringliteral">&apos;analysis_result&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysis_dict<sp/>=<sp/>Transformator.encode_AnalysisResult(analysis_storage)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage<sp/>=<sp/>copy.deepcopy(storage_genome.__dict__)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.__setitem__(</highlight><highlight class="stringliteral">&apos;analysis_result&apos;</highlight><highlight class="normal">,<sp/>analysis_dict)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storage.__setitem__(</highlight><highlight class="stringliteral">&apos;_type&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;StorageGenome&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertTrue(storage_genome.__eq__(Transformator.decode_StorageGenome(storage)))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>@unittest.expectedFailure</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_encode_AnalysisResultExpectedKeyError(self):</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysis_result<sp/>=<sp/>AnalysisResult()</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>analysis_result.__dict__<sp/>=<sp/>e</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>Transformator.encode_AnalysisResult(e))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>@unittest.expectedFailure</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_decodeAnalysisResultExpectedKeyError(self):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>Transformator.decode_AnalysisResult(e))</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>@unittest.expectedFailure</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_encode_StorageGenome(self):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genome<sp/>=<sp/>StorageGenome()</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>genome.__dict__<sp/>=<sp/>e</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>Transformator.encode_StorageGenome(e))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>@unittest.expectedFailure</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">test_decodeStorageGenomeExpectedKeyError(self):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.assertEqual(</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>Transformator.decode_StorageGenome(e))</highlight></codeline>
    </programlisting>
    <location file="NEAT/Tests/RepositoryTests/test_transformator.py"/>
  </compounddef>
</doxygen>
