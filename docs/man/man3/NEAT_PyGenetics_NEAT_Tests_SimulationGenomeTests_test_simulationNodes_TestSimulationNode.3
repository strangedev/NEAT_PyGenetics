.TH "NEAT_PyGenetics.NEAT.Tests.SimulationGenomeTests.test_simulationNodes.TestSimulationNode" 3 "Wed Apr 6 2016" "NEAT_PyGenetics" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NEAT_PyGenetics.NEAT.Tests.SimulationGenomeTests.test_simulationNodes.TestSimulationNode \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits TestCase\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBsetUp\fP (self)"
.br
.ti -1c
.RI "def \fBtest_createNodeWithoutInitialValue\fP (self)"
.br
.ti -1c
.RI "def \fBtest_createNodeWithInitialValue\fP (self)"
.br
.ti -1c
.RI "def \fBtest_resetNode\fP (self)"
.br
.ti -1c
.RI "def \fBtest_resetNodeWithInitialValue\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addSuccessor\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addSuccessorThatAlreadyExists\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addSuccessors\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addSuccessorsOfWhichOneAlreadyExists\fP (self)"
.br
.ti -1c
.RI "def \fBtest_fireNode\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addValueToNode\fP (self)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBrand\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 10 of file test_simulationNodes\&.py\&.
.SH "Member Function Documentation"
.PP 
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_addSuccessor ( self)"

.PP
.nf
Generates 100 random values from -1 to 2. Creates new nodes for every
value and adds them using the generated value as the weight.
Checks, that for values below zero and above one a
ValueError is raised.
:return:

.fi
.PP
 
.PP
Definition at line 63 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_addSuccessors ( self)"

.PP
.nf
Generates a list of nodes, appends it to a test node and checks, if
add_successor was called for every node.
:return:

.fi
.PP
 
.PP
Definition at line 93 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_addSuccessorsOfWhichOneAlreadyExists ( self)"

.PP
.nf
Generates a list of nodes and duplicates some of them.
Then checks, if appending the list to a node raises an Exception.
:return:

.fi
.PP
 
.PP
Definition at line 106 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_addSuccessorThatAlreadyExists ( self)"

.PP
.nf
Adds the same node multiple times to another node and expects it to
raise an Exception.
:return:

.fi
.PP
 
.PP
Definition at line 80 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_addValueToNode ( self)"

.PP
.nf
Tests, that add_value simply adds a given value to the stored value.
:return:

.fi
.PP
 
.PP
Definition at line 151 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_createNodeWithInitialValue ( self)"

.PP
.nf
Generates 100 random values from -1 to 2 and creates nodes with them as
initial values. Checks, that for values below zero and above one a
ValueError is raised.
:return:

.fi
.PP
 
.PP
Definition at line 26 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_createNodeWithoutInitialValue ( self)"

.PP
.nf
Checks, that casually initializing a Node works as intended.
:return:

.fi
.PP
 
.PP
Definition at line 15 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_fireNode ( self)"

.PP
.nf
Generates a list of nodes and weights, and a test node and their initial
value. Then adds the list as successors to the node and calls fire.
Checks that all values are calculated correctly.
Also checks that firing multiple times sums the values.
:return:

.fi
.PP
 
.PP
Definition at line 121 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_resetNode ( self)"

.PP
.nf
Tests, that resetting a node returns its value to zero.
:return:

.fi
.PP
 
.PP
Definition at line 42 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationNode\&.test_resetNodeWithInitialValue ( self)"

.PP
.nf
Tests, that resetting a node that was initialized with a value returns
its value to that initial value.
:return:

.fi
.PP
 
.PP
Definition at line 52 of file test_simulationNodes\&.py\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for NEAT_PyGenetics from the source code\&.
