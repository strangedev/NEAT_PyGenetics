.TH "NEAT_PyGenetics.NEAT.Tests.SimulationGenomeTests.test_simulationNodes.TestSimulationCycleNode" 3 "Wed Apr 6 2016" "NEAT_PyGenetics" \" -*- nroff -*-
.ad l
.nh
.SH NAME
NEAT_PyGenetics.NEAT.Tests.SimulationGenomeTests.test_simulationNodes.TestSimulationCycleNode \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits TestCase\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fBsetUp\fP (self)"
.br
.ti -1c
.RI "def \fBtest_createNode\fP (self)"
.br
.ti -1c
.RI "def \fBtest_preserveMemory\fP (self)"
.br
.ti -1c
.RI "def \fBtest_preserveMemoryWithInitialValue\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addCycleSuccessor\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addCycleSuccessorThatAlreadyExists\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addCycleSuccessors\fP (self)"
.br
.ti -1c
.RI "def \fBtest_addCycleSuccessorsOfWhichOneAlreadyExists\fP (self)"
.br
.ti -1c
.RI "def \fBtest_fireCycles\fP (self)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBrand\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 161 of file test_simulationNodes\&.py\&.
.SH "Member Function Documentation"
.PP 
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationCycleNode\&.test_addCycleSuccessor ( self)"

.PP
.nf
Generates 100 random values from -1 to 2. Creates new nodes for every
value and adds them using the generated value as the weight.
Checks, that for values below zero and above one a
ValueError is raised.
:return:

.fi
.PP
 
.PP
Definition at line 182 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationCycleNode\&.test_addCycleSuccessors ( self)"

.PP
.nf
Generates a list of nodes, appends it to a test node and checks, if
add_successor was called for every node.
:return:

.fi
.PP
 
.PP
Definition at line 218 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationCycleNode\&.test_addCycleSuccessorsOfWhichOneAlreadyExists ( self)"

.PP
.nf
Generates a list of nodes and duplicates some of them.
Then checks, if appending the list to a node raises an Exception.
:return:

.fi
.PP
 
.PP
Definition at line 231 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationCycleNode\&.test_addCycleSuccessorThatAlreadyExists ( self)"

.PP
.nf
Adds the same node multiple times to another node and expects it to
raise an Exception.
:return:

.fi
.PP
 
.PP
Definition at line 205 of file test_simulationNodes\&.py\&.
.SS "def NEAT_PyGenetics\&.NEAT\&.Tests\&.SimulationGenomeTests\&.test_simulationNodes\&.TestSimulationCycleNode\&.test_fireCycles ( self)"

.PP
.nf
Generates a list of nodes and weights, and a test node and their initial
value. Then adds the list as cycle_successors to the node and calls
fire.
Checks that all values are calculated correctly.
Also checks that firing multiple times sums the values.
:return:

.fi
.PP
 
.PP
Definition at line 248 of file test_simulationNodes\&.py\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for NEAT_PyGenetics from the source code\&.
